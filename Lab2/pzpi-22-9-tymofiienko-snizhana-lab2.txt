Міністерство освіти і науки України
Харківський національний університет радіоелектроніки
Кафедра програмної інженерії
Звіт
з лабораторної роботи №2
з дисципліни "Архітектура програмного забезпечення"
з теми: "Мобільний застосунок"
ВиконалаПеревірив
ст. гр. ПЗПІ-22-9Дашенков Д. С.
Тимофієнко Сніжана
Харків 20252
2 Лабораторна робота — Мобільний застосунок
2.1 Мета: розробити мобільний програмний застосунок для будь-якої
поширеної на сьогодні мобільної платформи. Мобільний застосунок повинен
бути частиною системи і повинен взаємодіяти з нею.
2.2 Хід роботи
У ході виконання лабораторної роботи було розроблено мобільний
застосунок для моніторингу здоров'я домашніх тварин - Pet Health Monitor.
Клієнтська частина розроблена на платформі Android з використанням мови
програмування Kotlin.
Застосунок призначений для власників домашніх тварин, дозволяючи їм
відслідковувати основні показники здоров'я своїх улюбленців, отримувати
сповіщення про відхилення від норми та рекомендації щодо догляду.
Основні функціональні можливості системи: авторизація та відновлення
паролю, перегляд списку тварин власника, перегляд детальної інформації про
тварину, моніторинг основних показників здоров’я, повідомлення про
потенційні проблеми зі здоров’ям тваринки, перегляд і редагування профілю
користувача.
Для збереження даних авторизації та налаштувань користувача
використовується SharedPreferences, що дозволяє зберігати дані локально на
пристрої та використовувати їх після перезапуску застосунку. Взаємодія із
серверною частиною відбувається за допомогою Retrofit - бібліотеки для
реалізації HTTP-запитів.
Архітектура застосунку побудована за принципом MVVM (Model-View-
ViewModel), що забезпечує розділення бізнес-логіки та представлення даних,
полегшує тестування та підтримку коду. Для асинхронних операцій
використовуються корутини Kotlin, що дозволяють ефективно працювати з
мережевими запитами без блокування основного потоку.
Система сповіщень реалізована за допомогою WorkManager, що
забезпечує періодичний моніторинг даних про здоров'я тварин та відправку
повідомлень користувачу у разі виявлення проблем.3
Також у ході лабораторної роботи було створено Use-Case діаграми, а саме:
UML діаграму прецедентів (Use Case Diagram), зображену на рис. 2.1, UML
діаграму компонентів (Component Diagram), зображену на рис. 2.2, UML
діаграму пакетів (Package Diagram), зображену на рис. 2.3 та ER-модель даних
(Entity–Relationship Model), зображену на рис. 2.4.
Рисунок 2.1 - UML діаграма прецедентів (Use Case Diagram)4
Рисунок 2.2 - UML діаграма компонентів (Component Diagram)
Рисунок 2.3 - UML діаграма пакетів (Package Diagram)5
Рисунок 2.4 - ER-модель даних (Entity–Relationship Model)
2.3 Висновок
У ході виконання лабораторної роботи було розроблено повноцінний
мобільний застосунок Pet Health Monitor мовою Kotlin для платформи Android.
Застосунок реалізує функціонал авторизації користувачів, відображення
профілю, перегляду списку домашніх тварин, моніторингу показників здоров'я
тварин та роботи зі сповіщеннями.
Було прийнято низку інженерних рішень, зокрема використано
архітектурний патерн MVVM (Model-View-ViewModel), що забезпечує
ефективне розділення бізнес-логіки та користувацького інтерфейсу. Взаємодія
з серверною частиною реалізована за допомогою бібліотеки Retrofit у поєднанні
з Kotlin Coroutines для асинхронної обробки мережевих запитів без блокування
головного потоку UI.
Для збереження даних авторизації та користувацьких налаштувань
застосовано SharedPreferences, що забезпечує персистентність даних між6
сеансами роботи додатку. Система сповіщень реалізована з використанням
WorkManager, що дозволяє організувати фонові періодичні перевірки стану
здоров'я тварин та генерацію повідомлень у разі виявлення проблем.
Клієнтська частина застосунку взаємодіє з серверною частиною, яка
забезпечує зберігання та обробку даних про користувачів, тварин та показники
їх здоров'я. Серверна частина також відповідає за аналітику даних здоров'я та
формування рекомендацій на основі показників.
Розроблений застосунок відповідає сучасним стандартам Android-
розробки, має інтуїтивно зрозумілий інтерфейс та забезпечує зручний спосіб
моніторингу здоров'я домашніх тварин. Система є масштабованою та може
бути розширена додатковими функціональними можливостями в майбутньому,
такими як інтеграція з ветеринарними клініками, розширення аналітики
здоров'я та додавання нових типів домашніх тварин.